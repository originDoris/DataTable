/*
 * This file is generated by jOOQ.
 */
package com.datatable.repository.tables.pojos;


import com.datatable.framework.plugin.jooq.generate.VertxPojo;
import com.datatable.repository.tables.interfaces.IDtApp;

import java.time.LocalDateTime;


import static com.datatable.framework.plugin.jooq.generate.VertxPojo.*;
/**
 * app
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DtApp implements VertxPojo, IDtApp {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private LocalDateTime gmtCreate;
    private LocalDateTime gmtModified;
    private String        appName;
    private String        appDesc;
    private Long          creator;
    private Long          editor;
    private Short         isDelete;
    private Long          tenantId;

    public DtApp() {}

    public DtApp(IDtApp value) {
        this.id = value.getId();
        this.gmtCreate = value.getGmtCreate();
        this.gmtModified = value.getGmtModified();
        this.appName = value.getAppName();
        this.appDesc = value.getAppDesc();
        this.creator = value.getCreator();
        this.editor = value.getEditor();
        this.isDelete = value.getIsDelete();
        this.tenantId = value.getTenantId();
    }

    public DtApp(
        Long          id,
        LocalDateTime gmtCreate,
        LocalDateTime gmtModified,
        String        appName,
        String        appDesc,
        Long          creator,
        Long          editor,
        Short         isDelete,
        Long          tenantId
    ) {
        this.id = id;
        this.gmtCreate = gmtCreate;
        this.gmtModified = gmtModified;
        this.appName = appName;
        this.appDesc = appDesc;
        this.creator = creator;
        this.editor = editor;
        this.isDelete = isDelete;
        this.tenantId = tenantId;
    }

        public DtApp(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>public.dt_app.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.dt_app.id</code>.
     */
    @Override
    public DtApp setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.dt_app.gmt_create</code>. 创建时间
     */
    @Override
    public LocalDateTime getGmtCreate() {
        return this.gmtCreate;
    }

    /**
     * Setter for <code>public.dt_app.gmt_create</code>. 创建时间
     */
    @Override
    public DtApp setGmtCreate(LocalDateTime gmtCreate) {
        this.gmtCreate = gmtCreate;
        return this;
    }

    /**
     * Getter for <code>public.dt_app.gmt_modified</code>. 更新时间
     */
    @Override
    public LocalDateTime getGmtModified() {
        return this.gmtModified;
    }

    /**
     * Setter for <code>public.dt_app.gmt_modified</code>. 更新时间
     */
    @Override
    public DtApp setGmtModified(LocalDateTime gmtModified) {
        this.gmtModified = gmtModified;
        return this;
    }

    /**
     * Getter for <code>public.dt_app.app_name</code>. 应用名称
     */
    @Override
    public String getAppName() {
        return this.appName;
    }

    /**
     * Setter for <code>public.dt_app.app_name</code>. 应用名称
     */
    @Override
    public DtApp setAppName(String appName) {
        this.appName = appName;
        return this;
    }

    /**
     * Getter for <code>public.dt_app.app_desc</code>. 应用描述
     */
    @Override
    public String getAppDesc() {
        return this.appDesc;
    }

    /**
     * Setter for <code>public.dt_app.app_desc</code>. 应用描述
     */
    @Override
    public DtApp setAppDesc(String appDesc) {
        this.appDesc = appDesc;
        return this;
    }

    /**
     * Getter for <code>public.dt_app.creator</code>. 创建人
     */
    @Override
    public Long getCreator() {
        return this.creator;
    }

    /**
     * Setter for <code>public.dt_app.creator</code>. 创建人
     */
    @Override
    public DtApp setCreator(Long creator) {
        this.creator = creator;
        return this;
    }

    /**
     * Getter for <code>public.dt_app.editor</code>. 更新人
     */
    @Override
    public Long getEditor() {
        return this.editor;
    }

    /**
     * Setter for <code>public.dt_app.editor</code>. 更新人
     */
    @Override
    public DtApp setEditor(Long editor) {
        this.editor = editor;
        return this;
    }

    /**
     * Getter for <code>public.dt_app.is_delete</code>. 0 否 1 是
     */
    @Override
    public Short getIsDelete() {
        return this.isDelete;
    }

    /**
     * Setter for <code>public.dt_app.is_delete</code>. 0 否 1 是
     */
    @Override
    public DtApp setIsDelete(Short isDelete) {
        this.isDelete = isDelete;
        return this;
    }

    /**
     * Getter for <code>public.dt_app.tenant_id</code>. 租户id
     */
    @Override
    public Long getTenantId() {
        return this.tenantId;
    }

    /**
     * Setter for <code>public.dt_app.tenant_id</code>. 租户id
     */
    @Override
    public DtApp setTenantId(Long tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DtApp other = (DtApp) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.gmtCreate == null) {
            if (other.gmtCreate != null)
                return false;
        }
        else if (!this.gmtCreate.equals(other.gmtCreate))
            return false;
        if (this.gmtModified == null) {
            if (other.gmtModified != null)
                return false;
        }
        else if (!this.gmtModified.equals(other.gmtModified))
            return false;
        if (this.appName == null) {
            if (other.appName != null)
                return false;
        }
        else if (!this.appName.equals(other.appName))
            return false;
        if (this.appDesc == null) {
            if (other.appDesc != null)
                return false;
        }
        else if (!this.appDesc.equals(other.appDesc))
            return false;
        if (this.creator == null) {
            if (other.creator != null)
                return false;
        }
        else if (!this.creator.equals(other.creator))
            return false;
        if (this.editor == null) {
            if (other.editor != null)
                return false;
        }
        else if (!this.editor.equals(other.editor))
            return false;
        if (this.isDelete == null) {
            if (other.isDelete != null)
                return false;
        }
        else if (!this.isDelete.equals(other.isDelete))
            return false;
        if (this.tenantId == null) {
            if (other.tenantId != null)
                return false;
        }
        else if (!this.tenantId.equals(other.tenantId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.gmtCreate == null) ? 0 : this.gmtCreate.hashCode());
        result = prime * result + ((this.gmtModified == null) ? 0 : this.gmtModified.hashCode());
        result = prime * result + ((this.appName == null) ? 0 : this.appName.hashCode());
        result = prime * result + ((this.appDesc == null) ? 0 : this.appDesc.hashCode());
        result = prime * result + ((this.creator == null) ? 0 : this.creator.hashCode());
        result = prime * result + ((this.editor == null) ? 0 : this.editor.hashCode());
        result = prime * result + ((this.isDelete == null) ? 0 : this.isDelete.hashCode());
        result = prime * result + ((this.tenantId == null) ? 0 : this.tenantId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DtApp (");

        sb.append(id);
        sb.append(", ").append(gmtCreate);
        sb.append(", ").append(gmtModified);
        sb.append(", ").append(appName);
        sb.append(", ").append(appDesc);
        sb.append(", ").append(creator);
        sb.append(", ").append(editor);
        sb.append(", ").append(isDelete);
        sb.append(", ").append(tenantId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDtApp from) {
        setId(from.getId());
        setGmtCreate(from.getGmtCreate());
        setGmtModified(from.getGmtModified());
        setAppName(from.getAppName());
        setAppDesc(from.getAppDesc());
        setCreator(from.getCreator());
        setEditor(from.getEditor());
        setIsDelete(from.getIsDelete());
        setTenantId(from.getTenantId());
    }

    @Override
    public <E extends IDtApp> E into(E into) {
        into.from(this);
        return into;
    }
}
