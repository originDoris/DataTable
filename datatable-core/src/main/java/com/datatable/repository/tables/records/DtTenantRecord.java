/*
 * This file is generated by jOOQ.
 */
package com.datatable.repository.tables.records;


import com.datatable.framework.plugin.jooq.generate.VertxPojo;
import com.datatable.repository.tables.DtTenant;
import com.datatable.repository.tables.interfaces.IDtTenant;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


import static com.datatable.framework.plugin.jooq.generate.VertxPojo.*;
/**
 * 租户
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DtTenantRecord extends UpdatableRecordImpl<DtTenantRecord> implements VertxPojo, Record9<Long, LocalDateTime, LocalDateTime, Long, Long, String, String, Short, String>, IDtTenant {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.dt_tenant.id</code>.
     */
    @Override
    public DtTenantRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_tenant.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.dt_tenant.gmt_create</code>. 创建时间
     */
    @Override
    public DtTenantRecord setGmtCreate(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_tenant.gmt_create</code>. 创建时间
     */
    @Override
    public LocalDateTime getGmtCreate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.dt_tenant.gmt_modified</code>. 修改时间
     */
    @Override
    public DtTenantRecord setGmtModified(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_tenant.gmt_modified</code>. 修改时间
     */
    @Override
    public LocalDateTime getGmtModified() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.dt_tenant.creator</code>. 创建人
     */
    @Override
    public DtTenantRecord setCreator(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_tenant.creator</code>. 创建人
     */
    @Override
    public Long getCreator() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.dt_tenant.editor</code>. 更新人
     */
    @Override
    public DtTenantRecord setEditor(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_tenant.editor</code>. 更新人
     */
    @Override
    public Long getEditor() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.dt_tenant.tenant_name</code>. 租户名称
     */
    @Override
    public DtTenantRecord setTenantName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_tenant.tenant_name</code>. 租户名称
     */
    @Override
    public String getTenantName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.dt_tenant.tenant_desc</code>. 租户描述
     */
    @Override
    public DtTenantRecord setTenantDesc(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_tenant.tenant_desc</code>. 租户描述
     */
    @Override
    public String getTenantDesc() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.dt_tenant.is_delete</code>. 0 否 1 是
     */
    @Override
    public DtTenantRecord setIsDelete(Short value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_tenant.is_delete</code>. 0 否 1 是
     */
    @Override
    public Short getIsDelete() {
        return (Short) get(7);
    }

    /**
     * Setter for <code>public.dt_tenant.tenant_status</code>. 租户状态
     */
    @Override
    public DtTenantRecord setTenantStatus(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_tenant.tenant_status</code>. 租户状态
     */
    @Override
    public String getTenantStatus() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, LocalDateTime, LocalDateTime, Long, Long, String, String, Short, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, LocalDateTime, LocalDateTime, Long, Long, String, String, Short, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return DtTenant.DT_TENANT.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return DtTenant.DT_TENANT.GMT_CREATE;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return DtTenant.DT_TENANT.GMT_MODIFIED;
    }

    @Override
    public Field<Long> field4() {
        return DtTenant.DT_TENANT.CREATOR;
    }

    @Override
    public Field<Long> field5() {
        return DtTenant.DT_TENANT.EDITOR;
    }

    @Override
    public Field<String> field6() {
        return DtTenant.DT_TENANT.TENANT_NAME;
    }

    @Override
    public Field<String> field7() {
        return DtTenant.DT_TENANT.TENANT_DESC;
    }

    @Override
    public Field<Short> field8() {
        return DtTenant.DT_TENANT.IS_DELETE;
    }

    @Override
    public Field<String> field9() {
        return DtTenant.DT_TENANT.TENANT_STATUS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getGmtCreate();
    }

    @Override
    public LocalDateTime component3() {
        return getGmtModified();
    }

    @Override
    public Long component4() {
        return getCreator();
    }

    @Override
    public Long component5() {
        return getEditor();
    }

    @Override
    public String component6() {
        return getTenantName();
    }

    @Override
    public String component7() {
        return getTenantDesc();
    }

    @Override
    public Short component8() {
        return getIsDelete();
    }

    @Override
    public String component9() {
        return getTenantStatus();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getGmtCreate();
    }

    @Override
    public LocalDateTime value3() {
        return getGmtModified();
    }

    @Override
    public Long value4() {
        return getCreator();
    }

    @Override
    public Long value5() {
        return getEditor();
    }

    @Override
    public String value6() {
        return getTenantName();
    }

    @Override
    public String value7() {
        return getTenantDesc();
    }

    @Override
    public Short value8() {
        return getIsDelete();
    }

    @Override
    public String value9() {
        return getTenantStatus();
    }

    @Override
    public DtTenantRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public DtTenantRecord value2(LocalDateTime value) {
        setGmtCreate(value);
        return this;
    }

    @Override
    public DtTenantRecord value3(LocalDateTime value) {
        setGmtModified(value);
        return this;
    }

    @Override
    public DtTenantRecord value4(Long value) {
        setCreator(value);
        return this;
    }

    @Override
    public DtTenantRecord value5(Long value) {
        setEditor(value);
        return this;
    }

    @Override
    public DtTenantRecord value6(String value) {
        setTenantName(value);
        return this;
    }

    @Override
    public DtTenantRecord value7(String value) {
        setTenantDesc(value);
        return this;
    }

    @Override
    public DtTenantRecord value8(Short value) {
        setIsDelete(value);
        return this;
    }

    @Override
    public DtTenantRecord value9(String value) {
        setTenantStatus(value);
        return this;
    }

    @Override
    public DtTenantRecord values(Long value1, LocalDateTime value2, LocalDateTime value3, Long value4, Long value5, String value6, String value7, Short value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDtTenant from) {
        setId(from.getId());
        setGmtCreate(from.getGmtCreate());
        setGmtModified(from.getGmtModified());
        setCreator(from.getCreator());
        setEditor(from.getEditor());
        setTenantName(from.getTenantName());
        setTenantDesc(from.getTenantDesc());
        setIsDelete(from.getIsDelete());
        setTenantStatus(from.getTenantStatus());
    }

    @Override
    public <E extends IDtTenant> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DtTenantRecord
     */
    public DtTenantRecord() {
        super(DtTenant.DT_TENANT);
    }

    /**
     * Create a detached, initialised DtTenantRecord
     */
    public DtTenantRecord(Long id, LocalDateTime gmtCreate, LocalDateTime gmtModified, Long creator, Long editor, String tenantName, String tenantDesc, Short isDelete, String tenantStatus) {
        super(DtTenant.DT_TENANT);

        setId(id);
        setGmtCreate(gmtCreate);
        setGmtModified(gmtModified);
        setCreator(creator);
        setEditor(editor);
        setTenantName(tenantName);
        setTenantDesc(tenantDesc);
        setIsDelete(isDelete);
        setTenantStatus(tenantStatus);
    }

    /**
     * Create a detached, initialised DtTenantRecord
     */
    public DtTenantRecord(com.datatable.repository.tables.pojos.DtTenant value) {
        super(DtTenant.DT_TENANT);

        if (value != null) {
            setId(value.getId());
            setGmtCreate(value.getGmtCreate());
            setGmtModified(value.getGmtModified());
            setCreator(value.getCreator());
            setEditor(value.getEditor());
            setTenantName(value.getTenantName());
            setTenantDesc(value.getTenantDesc());
            setIsDelete(value.getIsDelete());
            setTenantStatus(value.getTenantStatus());
        }
    }

        public DtTenantRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
