/*
 * This file is generated by jOOQ.
 */
package com.datatable.repository.tables.records;


import com.datatable.framework.plugin.jooq.generate.VertxPojo;
import com.datatable.repository.tables.DtView;
import com.datatable.repository.tables.interfaces.IDtView;

import io.vertx.core.json.JsonObject;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


import static com.datatable.framework.plugin.jooq.generate.VertxPojo.*;
/**
 * 视图
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DtViewRecord extends UpdatableRecordImpl<DtViewRecord> implements VertxPojo, Record13<Long, LocalDateTime, LocalDateTime, Long, Long, String, String, String, Long, Long, Short, Long, JsonObject>, IDtView {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.dt_view.id</code>.
     */
    @Override
    public DtViewRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_view.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.dt_view.gmt_create</code>. 创建时间
     */
    @Override
    public DtViewRecord setGmtCreate(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_view.gmt_create</code>. 创建时间
     */
    @Override
    public LocalDateTime getGmtCreate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.dt_view.gmt_modified</code>. 修改日期
     */
    @Override
    public DtViewRecord setGmtModified(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_view.gmt_modified</code>. 修改日期
     */
    @Override
    public LocalDateTime getGmtModified() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.dt_view.creator</code>. 创建人
     */
    @Override
    public DtViewRecord setCreator(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_view.creator</code>. 创建人
     */
    @Override
    public Long getCreator() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.dt_view.editor</code>. 修改人
     */
    @Override
    public DtViewRecord setEditor(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_view.editor</code>. 修改人
     */
    @Override
    public Long getEditor() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.dt_view.view_name</code>. 视图名称
     */
    @Override
    public DtViewRecord setViewName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_view.view_name</code>. 视图名称
     */
    @Override
    public String getViewName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.dt_view.view_desc</code>. 视图描述
     */
    @Override
    public DtViewRecord setViewDesc(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_view.view_desc</code>. 视图描述
     */
    @Override
    public String getViewDesc() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.dt_view.view_type</code>. 视图类型
     */
    @Override
    public DtViewRecord setViewType(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_view.view_type</code>. 视图类型
     */
    @Override
    public String getViewType() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.dt_view.tenant_id</code>. 租户id
     */
    @Override
    public DtViewRecord setTenantId(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_view.tenant_id</code>. 租户id
     */
    @Override
    public Long getTenantId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>public.dt_view.app_id</code>. 应用id
     */
    @Override
    public DtViewRecord setAppId(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_view.app_id</code>. 应用id
     */
    @Override
    public Long getAppId() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>public.dt_view.is_delete</code>. 0 否 1 是
     */
    @Override
    public DtViewRecord setIsDelete(Short value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_view.is_delete</code>. 0 否 1 是
     */
    @Override
    public Short getIsDelete() {
        return (Short) get(10);
    }

    /**
     * Setter for <code>public.dt_view.template_id</code>. 模版id
     */
    @Override
    public DtViewRecord setTemplateId(Long value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_view.template_id</code>. 模版id
     */
    @Override
    public Long getTemplateId() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>public.dt_view.view_config</code>. 视图配置
     */
    @Override
    public DtViewRecord setViewConfig(JsonObject value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.dt_view.view_config</code>. 视图配置
     */
    @Override
    public JsonObject getViewConfig() {
        return (JsonObject) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, LocalDateTime, LocalDateTime, Long, Long, String, String, String, Long, Long, Short, Long, JsonObject> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Long, LocalDateTime, LocalDateTime, Long, Long, String, String, String, Long, Long, Short, Long, JsonObject> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return DtView.DT_VIEW.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return DtView.DT_VIEW.GMT_CREATE;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return DtView.DT_VIEW.GMT_MODIFIED;
    }

    @Override
    public Field<Long> field4() {
        return DtView.DT_VIEW.CREATOR;
    }

    @Override
    public Field<Long> field5() {
        return DtView.DT_VIEW.EDITOR;
    }

    @Override
    public Field<String> field6() {
        return DtView.DT_VIEW.VIEW_NAME;
    }

    @Override
    public Field<String> field7() {
        return DtView.DT_VIEW.VIEW_DESC;
    }

    @Override
    public Field<String> field8() {
        return DtView.DT_VIEW.VIEW_TYPE;
    }

    @Override
    public Field<Long> field9() {
        return DtView.DT_VIEW.TENANT_ID;
    }

    @Override
    public Field<Long> field10() {
        return DtView.DT_VIEW.APP_ID;
    }

    @Override
    public Field<Short> field11() {
        return DtView.DT_VIEW.IS_DELETE;
    }

    @Override
    public Field<Long> field12() {
        return DtView.DT_VIEW.TEMPLATE_ID;
    }

    @Override
    public Field<JsonObject> field13() {
        return DtView.DT_VIEW.VIEW_CONFIG;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getGmtCreate();
    }

    @Override
    public LocalDateTime component3() {
        return getGmtModified();
    }

    @Override
    public Long component4() {
        return getCreator();
    }

    @Override
    public Long component5() {
        return getEditor();
    }

    @Override
    public String component6() {
        return getViewName();
    }

    @Override
    public String component7() {
        return getViewDesc();
    }

    @Override
    public String component8() {
        return getViewType();
    }

    @Override
    public Long component9() {
        return getTenantId();
    }

    @Override
    public Long component10() {
        return getAppId();
    }

    @Override
    public Short component11() {
        return getIsDelete();
    }

    @Override
    public Long component12() {
        return getTemplateId();
    }

    @Override
    public JsonObject component13() {
        return getViewConfig();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getGmtCreate();
    }

    @Override
    public LocalDateTime value3() {
        return getGmtModified();
    }

    @Override
    public Long value4() {
        return getCreator();
    }

    @Override
    public Long value5() {
        return getEditor();
    }

    @Override
    public String value6() {
        return getViewName();
    }

    @Override
    public String value7() {
        return getViewDesc();
    }

    @Override
    public String value8() {
        return getViewType();
    }

    @Override
    public Long value9() {
        return getTenantId();
    }

    @Override
    public Long value10() {
        return getAppId();
    }

    @Override
    public Short value11() {
        return getIsDelete();
    }

    @Override
    public Long value12() {
        return getTemplateId();
    }

    @Override
    public JsonObject value13() {
        return getViewConfig();
    }

    @Override
    public DtViewRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public DtViewRecord value2(LocalDateTime value) {
        setGmtCreate(value);
        return this;
    }

    @Override
    public DtViewRecord value3(LocalDateTime value) {
        setGmtModified(value);
        return this;
    }

    @Override
    public DtViewRecord value4(Long value) {
        setCreator(value);
        return this;
    }

    @Override
    public DtViewRecord value5(Long value) {
        setEditor(value);
        return this;
    }

    @Override
    public DtViewRecord value6(String value) {
        setViewName(value);
        return this;
    }

    @Override
    public DtViewRecord value7(String value) {
        setViewDesc(value);
        return this;
    }

    @Override
    public DtViewRecord value8(String value) {
        setViewType(value);
        return this;
    }

    @Override
    public DtViewRecord value9(Long value) {
        setTenantId(value);
        return this;
    }

    @Override
    public DtViewRecord value10(Long value) {
        setAppId(value);
        return this;
    }

    @Override
    public DtViewRecord value11(Short value) {
        setIsDelete(value);
        return this;
    }

    @Override
    public DtViewRecord value12(Long value) {
        setTemplateId(value);
        return this;
    }

    @Override
    public DtViewRecord value13(JsonObject value) {
        setViewConfig(value);
        return this;
    }

    @Override
    public DtViewRecord values(Long value1, LocalDateTime value2, LocalDateTime value3, Long value4, Long value5, String value6, String value7, String value8, Long value9, Long value10, Short value11, Long value12, JsonObject value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDtView from) {
        setId(from.getId());
        setGmtCreate(from.getGmtCreate());
        setGmtModified(from.getGmtModified());
        setCreator(from.getCreator());
        setEditor(from.getEditor());
        setViewName(from.getViewName());
        setViewDesc(from.getViewDesc());
        setViewType(from.getViewType());
        setTenantId(from.getTenantId());
        setAppId(from.getAppId());
        setIsDelete(from.getIsDelete());
        setTemplateId(from.getTemplateId());
        setViewConfig(from.getViewConfig());
    }

    @Override
    public <E extends IDtView> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DtViewRecord
     */
    public DtViewRecord() {
        super(DtView.DT_VIEW);
    }

    /**
     * Create a detached, initialised DtViewRecord
     */
    public DtViewRecord(Long id, LocalDateTime gmtCreate, LocalDateTime gmtModified, Long creator, Long editor, String viewName, String viewDesc, String viewType, Long tenantId, Long appId, Short isDelete, Long templateId, JsonObject viewConfig) {
        super(DtView.DT_VIEW);

        setId(id);
        setGmtCreate(gmtCreate);
        setGmtModified(gmtModified);
        setCreator(creator);
        setEditor(editor);
        setViewName(viewName);
        setViewDesc(viewDesc);
        setViewType(viewType);
        setTenantId(tenantId);
        setAppId(appId);
        setIsDelete(isDelete);
        setTemplateId(templateId);
        setViewConfig(viewConfig);
    }

    /**
     * Create a detached, initialised DtViewRecord
     */
    public DtViewRecord(com.datatable.repository.tables.pojos.DtView value) {
        super(DtView.DT_VIEW);

        if (value != null) {
            setId(value.getId());
            setGmtCreate(value.getGmtCreate());
            setGmtModified(value.getGmtModified());
            setCreator(value.getCreator());
            setEditor(value.getEditor());
            setViewName(value.getViewName());
            setViewDesc(value.getViewDesc());
            setViewType(value.getViewType());
            setTenantId(value.getTenantId());
            setAppId(value.getAppId());
            setIsDelete(value.getIsDelete());
            setTemplateId(value.getTemplateId());
            setViewConfig(value.getViewConfig());
        }
    }

        public DtViewRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
