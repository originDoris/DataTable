/*
 * This file is generated by jOOQ.
 */
package com.datatable.repository.tables.pojos;


import com.datatable.framework.plugin.jooq.generate.VertxPojo;
import com.datatable.repository.tables.interfaces.IDtField;

import io.vertx.core.json.JsonObject;

import java.time.LocalDateTime;


import static com.datatable.framework.plugin.jooq.generate.VertxPojo.*;
/**
 * 字段信息
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DtField implements VertxPojo, IDtField {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private LocalDateTime gmtCreate;
    private LocalDateTime gmtModified;
    private Long          creator;
    private Long          editor;
    private String        fieldName;
    private String        fieldDesc;
    private String        fieldType;
    private JsonObject    fieldProperty;
    private Short         isDelete;
    private Long          tenantId;
    private Long          appId;
    private Long          templateId;

    public DtField() {}

    public DtField(IDtField value) {
        this.id = value.getId();
        this.gmtCreate = value.getGmtCreate();
        this.gmtModified = value.getGmtModified();
        this.creator = value.getCreator();
        this.editor = value.getEditor();
        this.fieldName = value.getFieldName();
        this.fieldDesc = value.getFieldDesc();
        this.fieldType = value.getFieldType();
        this.fieldProperty = value.getFieldProperty();
        this.isDelete = value.getIsDelete();
        this.tenantId = value.getTenantId();
        this.appId = value.getAppId();
        this.templateId = value.getTemplateId();
    }

    public DtField(
        Long          id,
        LocalDateTime gmtCreate,
        LocalDateTime gmtModified,
        Long          creator,
        Long          editor,
        String        fieldName,
        String        fieldDesc,
        String        fieldType,
        JsonObject    fieldProperty,
        Short         isDelete,
        Long          tenantId,
        Long          appId,
        Long          templateId
    ) {
        this.id = id;
        this.gmtCreate = gmtCreate;
        this.gmtModified = gmtModified;
        this.creator = creator;
        this.editor = editor;
        this.fieldName = fieldName;
        this.fieldDesc = fieldDesc;
        this.fieldType = fieldType;
        this.fieldProperty = fieldProperty;
        this.isDelete = isDelete;
        this.tenantId = tenantId;
        this.appId = appId;
        this.templateId = templateId;
    }

        public DtField(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>public.dt_field.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.dt_field.id</code>.
     */
    @Override
    public DtField setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.dt_field.gmt_create</code>. 创建时间
     */
    @Override
    public LocalDateTime getGmtCreate() {
        return this.gmtCreate;
    }

    /**
     * Setter for <code>public.dt_field.gmt_create</code>. 创建时间
     */
    @Override
    public DtField setGmtCreate(LocalDateTime gmtCreate) {
        this.gmtCreate = gmtCreate;
        return this;
    }

    /**
     * Getter for <code>public.dt_field.gmt_modified</code>. 修改时间
     */
    @Override
    public LocalDateTime getGmtModified() {
        return this.gmtModified;
    }

    /**
     * Setter for <code>public.dt_field.gmt_modified</code>. 修改时间
     */
    @Override
    public DtField setGmtModified(LocalDateTime gmtModified) {
        this.gmtModified = gmtModified;
        return this;
    }

    /**
     * Getter for <code>public.dt_field.creator</code>. 创建人
     */
    @Override
    public Long getCreator() {
        return this.creator;
    }

    /**
     * Setter for <code>public.dt_field.creator</code>. 创建人
     */
    @Override
    public DtField setCreator(Long creator) {
        this.creator = creator;
        return this;
    }

    /**
     * Getter for <code>public.dt_field.editor</code>. 更新人
     */
    @Override
    public Long getEditor() {
        return this.editor;
    }

    /**
     * Setter for <code>public.dt_field.editor</code>. 更新人
     */
    @Override
    public DtField setEditor(Long editor) {
        this.editor = editor;
        return this;
    }

    /**
     * Getter for <code>public.dt_field.field_name</code>. 字段名称
     */
    @Override
    public String getFieldName() {
        return this.fieldName;
    }

    /**
     * Setter for <code>public.dt_field.field_name</code>. 字段名称
     */
    @Override
    public DtField setFieldName(String fieldName) {
        this.fieldName = fieldName;
        return this;
    }

    /**
     * Getter for <code>public.dt_field.field_desc</code>. 字段描述
     */
    @Override
    public String getFieldDesc() {
        return this.fieldDesc;
    }

    /**
     * Setter for <code>public.dt_field.field_desc</code>. 字段描述
     */
    @Override
    public DtField setFieldDesc(String fieldDesc) {
        this.fieldDesc = fieldDesc;
        return this;
    }

    /**
     * Getter for <code>public.dt_field.field_type</code>. 字段类型
     */
    @Override
    public String getFieldType() {
        return this.fieldType;
    }

    /**
     * Setter for <code>public.dt_field.field_type</code>. 字段类型
     */
    @Override
    public DtField setFieldType(String fieldType) {
        this.fieldType = fieldType;
        return this;
    }

    /**
     * Getter for <code>public.dt_field.field_property</code>. 字段属性
     */
    @Override
    public JsonObject getFieldProperty() {
        return this.fieldProperty;
    }

    /**
     * Setter for <code>public.dt_field.field_property</code>. 字段属性
     */
    @Override
    public DtField setFieldProperty(JsonObject fieldProperty) {
        this.fieldProperty = fieldProperty;
        return this;
    }

    /**
     * Getter for <code>public.dt_field.is_delete</code>. 0 否 1 是
     */
    @Override
    public Short getIsDelete() {
        return this.isDelete;
    }

    /**
     * Setter for <code>public.dt_field.is_delete</code>. 0 否 1 是
     */
    @Override
    public DtField setIsDelete(Short isDelete) {
        this.isDelete = isDelete;
        return this;
    }

    /**
     * Getter for <code>public.dt_field.tenant_id</code>. 租户id
     */
    @Override
    public Long getTenantId() {
        return this.tenantId;
    }

    /**
     * Setter for <code>public.dt_field.tenant_id</code>. 租户id
     */
    @Override
    public DtField setTenantId(Long tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Getter for <code>public.dt_field.app_id</code>. 应用id
     */
    @Override
    public Long getAppId() {
        return this.appId;
    }

    /**
     * Setter for <code>public.dt_field.app_id</code>. 应用id
     */
    @Override
    public DtField setAppId(Long appId) {
        this.appId = appId;
        return this;
    }

    /**
     * Getter for <code>public.dt_field.template_id</code>. 模版id
     */
    @Override
    public Long getTemplateId() {
        return this.templateId;
    }

    /**
     * Setter for <code>public.dt_field.template_id</code>. 模版id
     */
    @Override
    public DtField setTemplateId(Long templateId) {
        this.templateId = templateId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DtField other = (DtField) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.gmtCreate == null) {
            if (other.gmtCreate != null)
                return false;
        }
        else if (!this.gmtCreate.equals(other.gmtCreate))
            return false;
        if (this.gmtModified == null) {
            if (other.gmtModified != null)
                return false;
        }
        else if (!this.gmtModified.equals(other.gmtModified))
            return false;
        if (this.creator == null) {
            if (other.creator != null)
                return false;
        }
        else if (!this.creator.equals(other.creator))
            return false;
        if (this.editor == null) {
            if (other.editor != null)
                return false;
        }
        else if (!this.editor.equals(other.editor))
            return false;
        if (this.fieldName == null) {
            if (other.fieldName != null)
                return false;
        }
        else if (!this.fieldName.equals(other.fieldName))
            return false;
        if (this.fieldDesc == null) {
            if (other.fieldDesc != null)
                return false;
        }
        else if (!this.fieldDesc.equals(other.fieldDesc))
            return false;
        if (this.fieldType == null) {
            if (other.fieldType != null)
                return false;
        }
        else if (!this.fieldType.equals(other.fieldType))
            return false;
        if (this.fieldProperty == null) {
            if (other.fieldProperty != null)
                return false;
        }
        else if (!this.fieldProperty.equals(other.fieldProperty))
            return false;
        if (this.isDelete == null) {
            if (other.isDelete != null)
                return false;
        }
        else if (!this.isDelete.equals(other.isDelete))
            return false;
        if (this.tenantId == null) {
            if (other.tenantId != null)
                return false;
        }
        else if (!this.tenantId.equals(other.tenantId))
            return false;
        if (this.appId == null) {
            if (other.appId != null)
                return false;
        }
        else if (!this.appId.equals(other.appId))
            return false;
        if (this.templateId == null) {
            if (other.templateId != null)
                return false;
        }
        else if (!this.templateId.equals(other.templateId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.gmtCreate == null) ? 0 : this.gmtCreate.hashCode());
        result = prime * result + ((this.gmtModified == null) ? 0 : this.gmtModified.hashCode());
        result = prime * result + ((this.creator == null) ? 0 : this.creator.hashCode());
        result = prime * result + ((this.editor == null) ? 0 : this.editor.hashCode());
        result = prime * result + ((this.fieldName == null) ? 0 : this.fieldName.hashCode());
        result = prime * result + ((this.fieldDesc == null) ? 0 : this.fieldDesc.hashCode());
        result = prime * result + ((this.fieldType == null) ? 0 : this.fieldType.hashCode());
        result = prime * result + ((this.fieldProperty == null) ? 0 : this.fieldProperty.hashCode());
        result = prime * result + ((this.isDelete == null) ? 0 : this.isDelete.hashCode());
        result = prime * result + ((this.tenantId == null) ? 0 : this.tenantId.hashCode());
        result = prime * result + ((this.appId == null) ? 0 : this.appId.hashCode());
        result = prime * result + ((this.templateId == null) ? 0 : this.templateId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DtField (");

        sb.append(id);
        sb.append(", ").append(gmtCreate);
        sb.append(", ").append(gmtModified);
        sb.append(", ").append(creator);
        sb.append(", ").append(editor);
        sb.append(", ").append(fieldName);
        sb.append(", ").append(fieldDesc);
        sb.append(", ").append(fieldType);
        sb.append(", ").append(fieldProperty);
        sb.append(", ").append(isDelete);
        sb.append(", ").append(tenantId);
        sb.append(", ").append(appId);
        sb.append(", ").append(templateId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDtField from) {
        setId(from.getId());
        setGmtCreate(from.getGmtCreate());
        setGmtModified(from.getGmtModified());
        setCreator(from.getCreator());
        setEditor(from.getEditor());
        setFieldName(from.getFieldName());
        setFieldDesc(from.getFieldDesc());
        setFieldType(from.getFieldType());
        setFieldProperty(from.getFieldProperty());
        setIsDelete(from.getIsDelete());
        setTenantId(from.getTenantId());
        setAppId(from.getAppId());
        setTemplateId(from.getTemplateId());
    }

    @Override
    public <E extends IDtField> E into(E into) {
        into.from(this);
        return into;
    }
}
