/*
 * This file is generated by jOOQ.
 */
package com.datatable.repository.tables.pojos;


import com.datatable.framework.plugin.jooq.generate.VertxPojo;
import com.datatable.repository.tables.interfaces.IDtTemplate;

import java.time.LocalDateTime;


import static com.datatable.framework.plugin.jooq.generate.VertxPojo.*;
/**
 * 模版
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DtTemplate implements VertxPojo, IDtTemplate {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private LocalDateTime gmtCreate;
    private LocalDateTime gmtModified;
    private Long          creator;
    private Long          editor;
    private String        templateName;
    private String        templateDesc;
    private Long          tenantId;
    private Long          appId;
    private Short         isDelete;

    public DtTemplate() {}

    public DtTemplate(IDtTemplate value) {
        this.id = value.getId();
        this.gmtCreate = value.getGmtCreate();
        this.gmtModified = value.getGmtModified();
        this.creator = value.getCreator();
        this.editor = value.getEditor();
        this.templateName = value.getTemplateName();
        this.templateDesc = value.getTemplateDesc();
        this.tenantId = value.getTenantId();
        this.appId = value.getAppId();
        this.isDelete = value.getIsDelete();
    }

    public DtTemplate(
        Long          id,
        LocalDateTime gmtCreate,
        LocalDateTime gmtModified,
        Long          creator,
        Long          editor,
        String        templateName,
        String        templateDesc,
        Long          tenantId,
        Long          appId,
        Short         isDelete
    ) {
        this.id = id;
        this.gmtCreate = gmtCreate;
        this.gmtModified = gmtModified;
        this.creator = creator;
        this.editor = editor;
        this.templateName = templateName;
        this.templateDesc = templateDesc;
        this.tenantId = tenantId;
        this.appId = appId;
        this.isDelete = isDelete;
    }

        public DtTemplate(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>public.dt_template.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.dt_template.id</code>.
     */
    @Override
    public DtTemplate setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.dt_template.gmt_create</code>. 创建时间
     */
    @Override
    public LocalDateTime getGmtCreate() {
        return this.gmtCreate;
    }

    /**
     * Setter for <code>public.dt_template.gmt_create</code>. 创建时间
     */
    @Override
    public DtTemplate setGmtCreate(LocalDateTime gmtCreate) {
        this.gmtCreate = gmtCreate;
        return this;
    }

    /**
     * Getter for <code>public.dt_template.gmt_modified</code>. 修改时间
     */
    @Override
    public LocalDateTime getGmtModified() {
        return this.gmtModified;
    }

    /**
     * Setter for <code>public.dt_template.gmt_modified</code>. 修改时间
     */
    @Override
    public DtTemplate setGmtModified(LocalDateTime gmtModified) {
        this.gmtModified = gmtModified;
        return this;
    }

    /**
     * Getter for <code>public.dt_template.creator</code>. 创建人
     */
    @Override
    public Long getCreator() {
        return this.creator;
    }

    /**
     * Setter for <code>public.dt_template.creator</code>. 创建人
     */
    @Override
    public DtTemplate setCreator(Long creator) {
        this.creator = creator;
        return this;
    }

    /**
     * Getter for <code>public.dt_template.editor</code>. 更新人
     */
    @Override
    public Long getEditor() {
        return this.editor;
    }

    /**
     * Setter for <code>public.dt_template.editor</code>. 更新人
     */
    @Override
    public DtTemplate setEditor(Long editor) {
        this.editor = editor;
        return this;
    }

    /**
     * Getter for <code>public.dt_template.template_name</code>.
     */
    @Override
    public String getTemplateName() {
        return this.templateName;
    }

    /**
     * Setter for <code>public.dt_template.template_name</code>.
     */
    @Override
    public DtTemplate setTemplateName(String templateName) {
        this.templateName = templateName;
        return this;
    }

    /**
     * Getter for <code>public.dt_template.template_desc</code>. 描述
     */
    @Override
    public String getTemplateDesc() {
        return this.templateDesc;
    }

    /**
     * Setter for <code>public.dt_template.template_desc</code>. 描述
     */
    @Override
    public DtTemplate setTemplateDesc(String templateDesc) {
        this.templateDesc = templateDesc;
        return this;
    }

    /**
     * Getter for <code>public.dt_template.tenant_id</code>.
     */
    @Override
    public Long getTenantId() {
        return this.tenantId;
    }

    /**
     * Setter for <code>public.dt_template.tenant_id</code>.
     */
    @Override
    public DtTemplate setTenantId(Long tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Getter for <code>public.dt_template.app_id</code>. 应用id
     */
    @Override
    public Long getAppId() {
        return this.appId;
    }

    /**
     * Setter for <code>public.dt_template.app_id</code>. 应用id
     */
    @Override
    public DtTemplate setAppId(Long appId) {
        this.appId = appId;
        return this;
    }

    /**
     * Getter for <code>public.dt_template.is_delete</code>. 0 否 1 是
     */
    @Override
    public Short getIsDelete() {
        return this.isDelete;
    }

    /**
     * Setter for <code>public.dt_template.is_delete</code>. 0 否 1 是
     */
    @Override
    public DtTemplate setIsDelete(Short isDelete) {
        this.isDelete = isDelete;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DtTemplate other = (DtTemplate) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.gmtCreate == null) {
            if (other.gmtCreate != null)
                return false;
        }
        else if (!this.gmtCreate.equals(other.gmtCreate))
            return false;
        if (this.gmtModified == null) {
            if (other.gmtModified != null)
                return false;
        }
        else if (!this.gmtModified.equals(other.gmtModified))
            return false;
        if (this.creator == null) {
            if (other.creator != null)
                return false;
        }
        else if (!this.creator.equals(other.creator))
            return false;
        if (this.editor == null) {
            if (other.editor != null)
                return false;
        }
        else if (!this.editor.equals(other.editor))
            return false;
        if (this.templateName == null) {
            if (other.templateName != null)
                return false;
        }
        else if (!this.templateName.equals(other.templateName))
            return false;
        if (this.templateDesc == null) {
            if (other.templateDesc != null)
                return false;
        }
        else if (!this.templateDesc.equals(other.templateDesc))
            return false;
        if (this.tenantId == null) {
            if (other.tenantId != null)
                return false;
        }
        else if (!this.tenantId.equals(other.tenantId))
            return false;
        if (this.appId == null) {
            if (other.appId != null)
                return false;
        }
        else if (!this.appId.equals(other.appId))
            return false;
        if (this.isDelete == null) {
            if (other.isDelete != null)
                return false;
        }
        else if (!this.isDelete.equals(other.isDelete))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.gmtCreate == null) ? 0 : this.gmtCreate.hashCode());
        result = prime * result + ((this.gmtModified == null) ? 0 : this.gmtModified.hashCode());
        result = prime * result + ((this.creator == null) ? 0 : this.creator.hashCode());
        result = prime * result + ((this.editor == null) ? 0 : this.editor.hashCode());
        result = prime * result + ((this.templateName == null) ? 0 : this.templateName.hashCode());
        result = prime * result + ((this.templateDesc == null) ? 0 : this.templateDesc.hashCode());
        result = prime * result + ((this.tenantId == null) ? 0 : this.tenantId.hashCode());
        result = prime * result + ((this.appId == null) ? 0 : this.appId.hashCode());
        result = prime * result + ((this.isDelete == null) ? 0 : this.isDelete.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DtTemplate (");

        sb.append(id);
        sb.append(", ").append(gmtCreate);
        sb.append(", ").append(gmtModified);
        sb.append(", ").append(creator);
        sb.append(", ").append(editor);
        sb.append(", ").append(templateName);
        sb.append(", ").append(templateDesc);
        sb.append(", ").append(tenantId);
        sb.append(", ").append(appId);
        sb.append(", ").append(isDelete);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDtTemplate from) {
        setId(from.getId());
        setGmtCreate(from.getGmtCreate());
        setGmtModified(from.getGmtModified());
        setCreator(from.getCreator());
        setEditor(from.getEditor());
        setTemplateName(from.getTemplateName());
        setTemplateDesc(from.getTemplateDesc());
        setTenantId(from.getTenantId());
        setAppId(from.getAppId());
        setIsDelete(from.getIsDelete());
    }

    @Override
    public <E extends IDtTemplate> E into(E into) {
        into.from(this);
        return into;
    }
}
