/*
 * This file is generated by jOOQ.
 */
package com.datatable.repository.tables.pojos;


import com.datatable.framework.plugin.jooq.generate.VertxPojo;
import com.datatable.repository.tables.interfaces.IDtView;

import io.vertx.core.json.JsonObject;

import java.time.LocalDateTime;


import static com.datatable.framework.plugin.jooq.generate.VertxPojo.*;
/**
 * 视图
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DtView implements VertxPojo, IDtView {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private LocalDateTime gmtCreate;
    private LocalDateTime gmtModified;
    private Long          creator;
    private Long          editor;
    private String        viewName;
    private String        viewDesc;
    private String        viewType;
    private Long          tenantId;
    private Long          appId;
    private Short         isDelete;
    private Long          templateId;
    private JsonObject    viewConfig;

    public DtView() {}

    public DtView(IDtView value) {
        this.id = value.getId();
        this.gmtCreate = value.getGmtCreate();
        this.gmtModified = value.getGmtModified();
        this.creator = value.getCreator();
        this.editor = value.getEditor();
        this.viewName = value.getViewName();
        this.viewDesc = value.getViewDesc();
        this.viewType = value.getViewType();
        this.tenantId = value.getTenantId();
        this.appId = value.getAppId();
        this.isDelete = value.getIsDelete();
        this.templateId = value.getTemplateId();
        this.viewConfig = value.getViewConfig();
    }

    public DtView(
        Long          id,
        LocalDateTime gmtCreate,
        LocalDateTime gmtModified,
        Long          creator,
        Long          editor,
        String        viewName,
        String        viewDesc,
        String        viewType,
        Long          tenantId,
        Long          appId,
        Short         isDelete,
        Long          templateId,
        JsonObject    viewConfig
    ) {
        this.id = id;
        this.gmtCreate = gmtCreate;
        this.gmtModified = gmtModified;
        this.creator = creator;
        this.editor = editor;
        this.viewName = viewName;
        this.viewDesc = viewDesc;
        this.viewType = viewType;
        this.tenantId = tenantId;
        this.appId = appId;
        this.isDelete = isDelete;
        this.templateId = templateId;
        this.viewConfig = viewConfig;
    }

        public DtView(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>public.dt_view.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.dt_view.id</code>.
     */
    @Override
    public DtView setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.dt_view.gmt_create</code>. 创建时间
     */
    @Override
    public LocalDateTime getGmtCreate() {
        return this.gmtCreate;
    }

    /**
     * Setter for <code>public.dt_view.gmt_create</code>. 创建时间
     */
    @Override
    public DtView setGmtCreate(LocalDateTime gmtCreate) {
        this.gmtCreate = gmtCreate;
        return this;
    }

    /**
     * Getter for <code>public.dt_view.gmt_modified</code>. 修改日期
     */
    @Override
    public LocalDateTime getGmtModified() {
        return this.gmtModified;
    }

    /**
     * Setter for <code>public.dt_view.gmt_modified</code>. 修改日期
     */
    @Override
    public DtView setGmtModified(LocalDateTime gmtModified) {
        this.gmtModified = gmtModified;
        return this;
    }

    /**
     * Getter for <code>public.dt_view.creator</code>. 创建人
     */
    @Override
    public Long getCreator() {
        return this.creator;
    }

    /**
     * Setter for <code>public.dt_view.creator</code>. 创建人
     */
    @Override
    public DtView setCreator(Long creator) {
        this.creator = creator;
        return this;
    }

    /**
     * Getter for <code>public.dt_view.editor</code>. 修改人
     */
    @Override
    public Long getEditor() {
        return this.editor;
    }

    /**
     * Setter for <code>public.dt_view.editor</code>. 修改人
     */
    @Override
    public DtView setEditor(Long editor) {
        this.editor = editor;
        return this;
    }

    /**
     * Getter for <code>public.dt_view.view_name</code>. 视图名称
     */
    @Override
    public String getViewName() {
        return this.viewName;
    }

    /**
     * Setter for <code>public.dt_view.view_name</code>. 视图名称
     */
    @Override
    public DtView setViewName(String viewName) {
        this.viewName = viewName;
        return this;
    }

    /**
     * Getter for <code>public.dt_view.view_desc</code>. 视图描述
     */
    @Override
    public String getViewDesc() {
        return this.viewDesc;
    }

    /**
     * Setter for <code>public.dt_view.view_desc</code>. 视图描述
     */
    @Override
    public DtView setViewDesc(String viewDesc) {
        this.viewDesc = viewDesc;
        return this;
    }

    /**
     * Getter for <code>public.dt_view.view_type</code>. 视图类型
     */
    @Override
    public String getViewType() {
        return this.viewType;
    }

    /**
     * Setter for <code>public.dt_view.view_type</code>. 视图类型
     */
    @Override
    public DtView setViewType(String viewType) {
        this.viewType = viewType;
        return this;
    }

    /**
     * Getter for <code>public.dt_view.tenant_id</code>. 租户id
     */
    @Override
    public Long getTenantId() {
        return this.tenantId;
    }

    /**
     * Setter for <code>public.dt_view.tenant_id</code>. 租户id
     */
    @Override
    public DtView setTenantId(Long tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Getter for <code>public.dt_view.app_id</code>. 应用id
     */
    @Override
    public Long getAppId() {
        return this.appId;
    }

    /**
     * Setter for <code>public.dt_view.app_id</code>. 应用id
     */
    @Override
    public DtView setAppId(Long appId) {
        this.appId = appId;
        return this;
    }

    /**
     * Getter for <code>public.dt_view.is_delete</code>. 0 否 1 是
     */
    @Override
    public Short getIsDelete() {
        return this.isDelete;
    }

    /**
     * Setter for <code>public.dt_view.is_delete</code>. 0 否 1 是
     */
    @Override
    public DtView setIsDelete(Short isDelete) {
        this.isDelete = isDelete;
        return this;
    }

    /**
     * Getter for <code>public.dt_view.template_id</code>. 模版id
     */
    @Override
    public Long getTemplateId() {
        return this.templateId;
    }

    /**
     * Setter for <code>public.dt_view.template_id</code>. 模版id
     */
    @Override
    public DtView setTemplateId(Long templateId) {
        this.templateId = templateId;
        return this;
    }

    /**
     * Getter for <code>public.dt_view.view_config</code>. 视图配置
     */
    @Override
    public JsonObject getViewConfig() {
        return this.viewConfig;
    }

    /**
     * Setter for <code>public.dt_view.view_config</code>. 视图配置
     */
    @Override
    public DtView setViewConfig(JsonObject viewConfig) {
        this.viewConfig = viewConfig;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DtView other = (DtView) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.gmtCreate == null) {
            if (other.gmtCreate != null)
                return false;
        }
        else if (!this.gmtCreate.equals(other.gmtCreate))
            return false;
        if (this.gmtModified == null) {
            if (other.gmtModified != null)
                return false;
        }
        else if (!this.gmtModified.equals(other.gmtModified))
            return false;
        if (this.creator == null) {
            if (other.creator != null)
                return false;
        }
        else if (!this.creator.equals(other.creator))
            return false;
        if (this.editor == null) {
            if (other.editor != null)
                return false;
        }
        else if (!this.editor.equals(other.editor))
            return false;
        if (this.viewName == null) {
            if (other.viewName != null)
                return false;
        }
        else if (!this.viewName.equals(other.viewName))
            return false;
        if (this.viewDesc == null) {
            if (other.viewDesc != null)
                return false;
        }
        else if (!this.viewDesc.equals(other.viewDesc))
            return false;
        if (this.viewType == null) {
            if (other.viewType != null)
                return false;
        }
        else if (!this.viewType.equals(other.viewType))
            return false;
        if (this.tenantId == null) {
            if (other.tenantId != null)
                return false;
        }
        else if (!this.tenantId.equals(other.tenantId))
            return false;
        if (this.appId == null) {
            if (other.appId != null)
                return false;
        }
        else if (!this.appId.equals(other.appId))
            return false;
        if (this.isDelete == null) {
            if (other.isDelete != null)
                return false;
        }
        else if (!this.isDelete.equals(other.isDelete))
            return false;
        if (this.templateId == null) {
            if (other.templateId != null)
                return false;
        }
        else if (!this.templateId.equals(other.templateId))
            return false;
        if (this.viewConfig == null) {
            if (other.viewConfig != null)
                return false;
        }
        else if (!this.viewConfig.equals(other.viewConfig))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.gmtCreate == null) ? 0 : this.gmtCreate.hashCode());
        result = prime * result + ((this.gmtModified == null) ? 0 : this.gmtModified.hashCode());
        result = prime * result + ((this.creator == null) ? 0 : this.creator.hashCode());
        result = prime * result + ((this.editor == null) ? 0 : this.editor.hashCode());
        result = prime * result + ((this.viewName == null) ? 0 : this.viewName.hashCode());
        result = prime * result + ((this.viewDesc == null) ? 0 : this.viewDesc.hashCode());
        result = prime * result + ((this.viewType == null) ? 0 : this.viewType.hashCode());
        result = prime * result + ((this.tenantId == null) ? 0 : this.tenantId.hashCode());
        result = prime * result + ((this.appId == null) ? 0 : this.appId.hashCode());
        result = prime * result + ((this.isDelete == null) ? 0 : this.isDelete.hashCode());
        result = prime * result + ((this.templateId == null) ? 0 : this.templateId.hashCode());
        result = prime * result + ((this.viewConfig == null) ? 0 : this.viewConfig.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DtView (");

        sb.append(id);
        sb.append(", ").append(gmtCreate);
        sb.append(", ").append(gmtModified);
        sb.append(", ").append(creator);
        sb.append(", ").append(editor);
        sb.append(", ").append(viewName);
        sb.append(", ").append(viewDesc);
        sb.append(", ").append(viewType);
        sb.append(", ").append(tenantId);
        sb.append(", ").append(appId);
        sb.append(", ").append(isDelete);
        sb.append(", ").append(templateId);
        sb.append(", ").append(viewConfig);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDtView from) {
        setId(from.getId());
        setGmtCreate(from.getGmtCreate());
        setGmtModified(from.getGmtModified());
        setCreator(from.getCreator());
        setEditor(from.getEditor());
        setViewName(from.getViewName());
        setViewDesc(from.getViewDesc());
        setViewType(from.getViewType());
        setTenantId(from.getTenantId());
        setAppId(from.getAppId());
        setIsDelete(from.getIsDelete());
        setTemplateId(from.getTemplateId());
        setViewConfig(from.getViewConfig());
    }

    @Override
    public <E extends IDtView> E into(E into) {
        into.from(this);
        return into;
    }
}
